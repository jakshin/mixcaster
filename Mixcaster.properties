# Mixcaster configuration.
# Some of Mixcaster's behavior can be tweaked; if its defaults aren't suitable,
# put a copy of this file next to Mixcaster.jar and change as desired.
#
# You need to restart the Mixcaster service for it to notice property changes.
# Run `pkill -if mixcaster` to stop it; if it's a launchd agent it'll restart
# automatically, otherwise you'll need to start it again manually.

# Whether to download older music files first, when multiple files are queued for download from mixcloud.com.
# Set this to "true" if you like to configure your podcast player to play oldest episodes first;
# it defaults to false, to match iTunes' default behavior (any value other than "true" means false).
download_oldest_first = false

# The number of music-file downloads to perform concurrently.
# If this isn't an integer greater than 0 and less than or equal to 50, it'll be ignored,
# and the default value of 3 will be used.
download_threads = 3

# How long to cache scraped Mixcloud feeds, in seconds. If the same feed is needed again within this time frame,
# the cached version will be used, instead of re-scraping Mixcloud.
# Must be an integer greater than or equal to 0, or the default value of 1 hour will be used.
http_cache_time_seconds = 3600

# The hostname at which the server can be accessed; the default is localhost.
# If HTTP requests for RSS are received with a Host header value which differs from this,
# the the RSS's links will use the Host header's value, not this, so it serves mostly as a default.
http_hostname = localhost

# The HTTP port on which to listen for requests, i.e. on which to serve podcast RSS and music files.
# Must be in the range 1024-65535, inclusive, or it'll be ignored and the default value will be used.
# The default is 25683 ("cloud" on a phone keypad... silly, yes, but I had to pick something).
http_port = 25683

# The maximum number of scrape log files to keep, and service logs to keep (independently of each other).
# One log file is created for each scrape run. The service writes to the same log file until it reaches 1 MB,
# then rolls over to the next file, within and across runs. The default is 20.
log_max_count = 20

# The directory in which to store log files.
# The program will attempt to create this directory if it doesn't already exist.
# You can start this with ~/ to indicate the home directory of the user as whom the program is running.
# The default is ~/Library/Logs/Mixcaster.
log_dir = ~/Library/Logs/Mixcaster

# The minimum level of log messages to write to log files.
# Must be one of: ERROR, WARNING, INFO, DEBUG, ALL (DEBUG and ALL are equivalent),
# or the default value of ALL will be used.
log_level = ALL

# The directory in which to store downloaded music files, in subdirectories named after Mixcloud feeds.
# The program will attempt to create this directory if it doesn't already exist.
# If you change this, you should also rename the existing directory, to avoid re-downloading music files.
# You can start this with ~/ to indicate the home directory of the user as whom the program is running.
# The default is ~/Music/Mixcloud.
music_dir = ~/Music/Mixcloud

# The regular expression to use while parsing stream/track URLs out of Mixcloud's decoded m-play-info attributes.
# Note that any backslashes must be doubled here because of the properties-file syntax.
stream_url_regex = "stream_url":\\s*"([^"]+)"

# The regular expression to use while parsing stream/track info out of Mixcloud feed pages.
# Note that any backslashes must be doubled here because of the properties-file syntax.
track_regex = <span\\s+class\\s*=\\s*"play-button"([^>]+)>

# The User-Agent header with which to send HTTP requests to mixcloud.com.
# The default is for Firefox 45 on OS X.
user_agent = Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:45.0) Gecko/20100101 Firefox/45.0
